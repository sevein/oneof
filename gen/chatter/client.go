// Code generated by goa v3.7.13, DO NOT EDIT.
//
// chatter client
//
// Command:
// $ goa gen github.com/sevein/oneof/design -o .

package chatter

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "chatter" service client.
type Client struct {
	SubscribeEndpoint goa.Endpoint
}

// NewClient initializes a "chatter" service client given the endpoints.
func NewClient(subscribe goa.Endpoint) *Client {
	return &Client{
		SubscribeEndpoint: subscribe,
	}
}

// Subscribe calls the "subscribe" endpoint of the "chatter" service.
func (c *Client) Subscribe(ctx context.Context) (res SubscribeClientStream, err error) {
	var ires interface{}
	ires, err = c.SubscribeEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(SubscribeClientStream), nil
}
